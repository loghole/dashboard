// Code generated by tron1.0.0. DO NOT EDIT.

package entry

import (
	context "context"
	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	transport "github.com/loghole/tron/transport"
	grpc "google.golang.org/grpc"
)

// EntryServiceDesc is description for the EntryServer.
type EntryServiceDesc struct {
	svc EntryServer
}

func NewEntryServiceDesc(i EntryServer) transport.ServiceDesc {
	return &EntryServiceDesc{svc: i}
}

func (d *EntryServiceDesc) RegisterGRPC(s *grpc.Server) {
	RegisterEntryServer(s, d.svc)
}

func (d *EntryServiceDesc) RegisterHTTP(mux *runtime.ServeMux) {
	RegisterEntryHandlerServer(context.Background(), mux, d.svc)
}

func (d *EntryServiceDesc) SwaggerDef() []byte {
	return []byte(`{
  "swagger": "2.0",
  "info": {
    "title": "entry.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/entry/list": {
      "post": {
        "operationId": "Entry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/entry.v1.ListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entry.v1.ListReq"
            }
          }
        ],
        "tags": [
          "Entry"
        ]
      }
    }
  },
  "definitions": {
    "entry.v1.ListReq": {
      "type": "object",
      "properties": {
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entry.v1.QueryParam"
          }
        },
        "limit": {
          "type": "string",
          "format": "int64"
        },
        "offset": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "entry.v1.ListResp": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "entry.v1.ParamValue": {
      "type": "object",
      "properties": {
        "item": {
          "type": "string"
        },
        "list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entry.v1.QueryParam": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/entry.v1.ParamValue"
        },
        "operator": {
          "type": "string"
        }
      }
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}
`)
}
